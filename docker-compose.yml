version: '3.8'

services:
  api-gateway:
    build: ./gateway-service
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=docker
    volumes:
      - ./gateway-service/config:/app/config
    networks:
      - microservice-network
    restart: always
    depends_on:
      - user-service
      - issue-service
      - postgres
      - rabbitmq

  user-service:
    build: ./user-service2
    ports:
      - "5001:8000"
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/userdb
    volumes:
      - ./user-service2:/app
    networks:
      - microservice-network

  issue-service:
    build: ./IssueService
    ports:
      - "5003:8080"
    depends_on:
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MongoDB__ConnectionString=mongodb://mongodb:27017
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__UserName=user
      - RabbitMQ__Password=password
    networks:
      - microservice-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - microservice-network

  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=userdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - microservice-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

volumes:
  postgres_data:
  rabbitmq_data:
  mongodb_data:

networks:
  microservice-network:
    driver: bridge 