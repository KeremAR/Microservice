version: '3.8'

services:
  # User Service
  user_service:
    build: ./user-service
    container_name: user-service
    depends_on:
      user-service-postgres:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/userdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
    ports:
      - "8081:8080"
    networks:
      - microservice-network

  # PostgreSQL for User Service
  user-service-postgres:
    image: postgres:latest
    container_name: user-service-postgres
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ Service
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: user_service_rabbitmq
    ports:
      - "5672:5672"   # AMQP protocol port
      - "15672:15672" # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - user-network

  # Future services will be added here
  # Example:
  # issue-service:
  #   build: ./issue-service
  #   container_name: issue-service
  #   ports:
  #     - "8082:8082"
  #   networks:
  #     - campus-network

  # department-service:
  #   build: ./department-service
  #   container_name: department-service
  #   ports:
  #     - "8083:8083"
  #   networks:
  #     - campus-network

  # notification-service:
  #   build: ./notification-service
  #   container_name: notification-service
  #   ports:
  #     - "8084:8084"
  #   networks:
  #     - campus-network

  # gateway-service:
  #   build: ./gateway-service
  #   container_name: gateway-service
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - campus-network

networks:
  microservice-network:
    driver: bridge
  user-network:
    driver: bridge

volumes:
  postgres_data:
  rabbitmq_data:
  # Future volumes will be added here
  # Example:
  # issue_mongodb_data:
  # department_postgres_data:
  # notification_postgres_data: 