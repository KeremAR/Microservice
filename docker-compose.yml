version: '3.8'

services:
  api-gateway:
    build: ./gateway-service
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=docker
      - NOTIFICATION_SERVICE_URL=http://notification-service:5004
    volumes:
      - ./gateway-service/config:/app/config
    networks:
      - microservice-network
    restart: always
    depends_on:
      - user-service
      - department-service
      - issue-service
      - notification-service
      - rabbitmq

  department-service:
    build: ./department-service
    container_name: department-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://aws-0-eu-central-1.pooler.supabase.com:6543/postgres?user=postgres.ahrhnlmeimlxttvujmpa&password=Qfnr9GtwhCrlVOK3&sslmode=require
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=user
      - SPRING_RABBITMQ_PASSWORD=password
    ports:
      - "8083:8083"
    networks:
      - microservice-network
    depends_on:
      - rabbitmq

  user-service:
    build: ./user-service2
    ports:
      - "5001:8000"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      # Supabase bağlantı bilgileri
      - SUPABASE_DB_HOST=ahrhnlmeimlxttvujmpa.supabase.co
      - SUPABASE_DB_PORT=5432
      - SUPABASE_DB_NAME=postgres  # Supabase'in varsayılan DB adı "postgres"
      - SUPABASE_DB_USER=postgres
      - SUPABASE_DB_PASSWORD=Qfnr9GtwhCrlVOK3
      # Supabase HTTP API için gerekli anahtarlar
      - SUPABASE_URL=https://ahrhnlmeimlxttvujmpa.supabase.co
      - SUPABASE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFocmhubG1laW1seHR0dnVqbXBhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY3MDcxMjIsImV4cCI6MjA2MjI4MzEyMn0.6jJ1IxliIFw4zjBL5BO0Mycdrxnu1LyTLNuf_MKckio
    volumes:
      - ./user-service2:/app
    networks:
      - microservice-network

  issue-service:
    build: ./IssueService
    ports:
      - "5003:8080"
    depends_on:
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MongoDB__ConnectionString=mongodb+srv://cefakarberkay:berkay01@campuscation.jtmagbt.mongodb.net/?retryWrites=true&w=majority&appName=CampusCation
      - MongoDB__Database=IssueDb
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__UserName=user
      - RabbitMQ__Password=password
    networks:
      - microservice-network

  notification-service:
    build: ./notification-service
    ports:
      - "5004:5004"
    environment:
      - PORT=5004
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=notification_db
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - microservice-network

  postgres:
    image: postgres:14-alpine
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=userdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - microservice-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

volumes:
  postgres_data:
  rabbitmq_data:

networks:
  microservice-network:
    driver: bridge 