version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: user_service_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-userdb}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - user-network

  user-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: user_service
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/userdb
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER:-postgres}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-here}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-86400000}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - user-network

networks:
  user-network:
    driver: bridge

volumes:
  postgres_data: 